
const color = require("../Config/colors.json");
const config = require("../config.json");
const { MessageEmbed, User } = require("discord.js");
const UserConfigEvent = require("../Event/Config/UserConfigEvent");
const CreatePartyConfig = require("../Event/Config/CreatePartyConfig");

const UserSettingConfig = require("../Event/Config/UserSettingConfig");
const UserEconomyConfig = require("../Event/Config/UserEconomyConfig");
const Users = new UserConfigEvent();
// UserConfigEvent
// const color = require("../../Config/colors.json");
// CreatePartyConfig
const Party = new CreatePartyConfig();
const setting = new UserSettingConfig();
const economy = new UserEconomyConfig();
module.exports = {
    get(a,user){
      // console.log(Party.getParty(user));
      var party = Party.getParty(user) ? `Leader : ${Users.getName(Party.getParty(user).head)}` : "‡πÑ‡∏°‡πà‡∏°‡∏µ";
      // console.log(party);
      var f = [
        { 
          name: ":globe_with_meridians:: Player Name/ID", 
          value: `${Users.getName(user)}\nID: ${Users.getDOR_ID(user)}`, 
          inline: true 
        },
        { 
          name: "‚ù§Ô∏è: HP/MaxHP", 
          value: `${Users.getHP(user)}/${Users.getMaxHP(user)}`, 
          inline: true 
        },
        { 
          name: `:crossed_swords:: Lv.${Users.getLevel(user)}`, 
          value: `exp: ${Users.getExp(user)}/${Users.getMaxExp(user)}`, 
          inline: true 
        },
        { 
          name: "üß¨: ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û", 
          value: `${Users.getJob(user)}`, 
          inline: true 
        },
        { 
          name: "üí∏: ‡πÄ‡∏á‡∏¥‡∏ô", 
          value: `${economy.getFormatMoney(user)} $`,
          inline: true 
        },
        { 
          name: ":family_mwg:: ‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ", 
          value: party,
          inline: true 
        },
        { 
          name: "üìú: ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", 
          value: setting.getMsg(user),
          inline: false 
        }
      ];
      // var member = ob.member;
      // for (let i = 0; i < member.length; i++) {
      //  var sb = { 
      //     name: member[i], 
      //     value: 'Some value here', 
      //     inline: true 
      //   }
      //   f.push(sb);
      // }

      const exampleEmbed = new MessageEmbed()
      .setColor("#"+color.normal)
      .setTitle('MY PROFILE')
      // .setURL('https://discord.js.org/')
      // .setAuthor('Some name', 'https://i.imgur.com/AfFp7pu.png', 'https://discord.js.org')
      .setDescription('b.inv ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤\nb.store | b.shop ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤\nb.item <name> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏≠‡πÄ‡∏ó‡∏°\nb.add <id> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô\nb.list ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô\nb.button-mode emoji | buttons ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î')
      // .setThumbnail('https://i.imgur.com/AfFp7pu.png')
      .addFields(f)
      // .addField('Inline field title', 'Some value here', true)
      .setImage(`attachment://${a.name}`)
      .setTimestamp()
      .setFooter(config.Game_name);


      return exampleEmbed;
    // message.channel.send({ embeds: [exampleEmbed] });
    },
    author(a,user){
      // console.log(Party.getParty(user));
      var party = Party.getParty(user) ? `Leader : ${Users.getName(Party.getParty(user).head)}` : "‡πÑ‡∏°‡πà‡∏°‡∏µ";
      // console.log(party);
      var f = [
        { 
          name: ":globe_with_meridians:: Player Name/ID", 
          value: `${Users.getName(user)}\nID: ${Users.getDOR_ID(user)}`, 
          inline: true 
        },
        { 
          name: "‚ù§Ô∏è: HP/MaxHP", 
          value: `${Users.getHP(user)}/${Users.getMaxHP(user)}`, 
          inline: true 
        },
        { 
          name: `:crossed_swords:: Lv.${Users.getLevel(user)}`, 
          value: `exp: ${Users.getExp(user)}/${Users.getMaxExp(user)}`, 
          inline: true 
        },
        { 
          name: "üß¨: ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û", 
          value: `${Users.getJob(user)}`, 
          inline: true 
        },
        { 
          name: ":family_mwg:: ‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ", 
          value: party,
          inline: true 
        },
        { 
          name: ":notepad_spiral:: ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö", 
          value: "‡πÄ‡∏£‡πá‡∏ß‡πÜ‡∏ô‡∏µ‡πâ !",
          inline: false 
        }
      ];
      // var member = ob.member;
      // for (let i = 0; i < member.length; i++) {
      //  var sb = { 
      //     name: member[i], 
      //     value: 'Some value here', 
      //     inline: true 
      //   }
      //   f.push(sb);
      // }

      const exampleEmbed = new MessageEmbed()
      .setColor("#"+color.normal)
      .setTitle(`${Users.getName(user)} Profile`)
      // .setURL('https://discord.js.org/')
      // .setAuthor('Some name', 'https://i.imgur.com/AfFp7pu.png', 'https://discord.js.org')
      .setDescription('b.profile ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì')
      // .setThumbnail('https://i.imgur.com/AfFp7pu.png')
      .addFields(f)
      // .addField('Inline field title', 'Some value here', true)
      .setImage(`attachment://${a.name}`)
      .setTimestamp()
      .setFooter(config.Game_name);


      return exampleEmbed;
    // message.channel.send({ embeds: [exampleEmbed] });
    }
}